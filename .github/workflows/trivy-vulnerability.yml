name: Vulnerability scan

on:
  push:
    branches:
      - test1
  pull_request:
    branches:
      - test1
        

env:
  DEPLOYMENT_NAME: 2048-app # TODO: update deployment name
  IMAGE: 2048 # TODO: update to image name
  REPO: krogerpoc.jfrog.io/kube-poc-docker #TODO: Update full repo name
  KUBE_CONTEXT: kube-poc
  # GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }} # TODO Update GKE Project ID
  # GKE_CLUSTER: kube-cluster    # TODO: update to cluster name
  # GKE_ZONE: asia-south1-a   # TODO: update to cluster zone

jobs:
  # Job 1: Setup, Build
  setup-build:
    name: Setup, Build
    runs-on: ubuntu-latest
    # environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout the branch ${{ GITHUB.REF }}'
      uses: actions/checkout@v2
    # Build the Docker using Dockerfile

    # Create Dockerconfig
    - name: Create Dockerconfig
      run: |-
        mkdir -p ${HOME}/.kube
        echo "${{ secrets.DOCKER_CONFIG }}" | base64 --decode > ${HOME}/.docker/config.json
        # cat ${HOME}/.docker/config.json

    - name: Build
      run: |-
        docker build \
          --tag "$REPO/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
        docker image ls

    - name: Run Trivy vulnerability scanner
      run: |
        curl -L https://github.com/aquasecurity/trivy/releases/download/v0.19.2/trivy_0.19.2_Linux-64bit.tar.gz | tar xvzf - contrib trivy
        chmod 755 trivy
        mv trivy /usr/local/bin/trivy
        trivy image --format template --template "@contrib/sarif.tpl" --output trivy-results.sarif ${{ env.REPO }}/${{ env.IMAGE }}:${{ env.GITHUB_SHA }}

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: ${{ env.REPO }}/${{ env.IMAGE }}:${{ env.GITHUB_SHA }}
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'

# # Job 3: Vulnerability scan using Trivy
#   trivy-vulnerability-scan:
#     name: Vulnerability scan using trivy
#     runs-on: ubuntu-latest
#     needs: dockerize
#     environment: production
#     steps:
#     - name: Checkout the branch ${{ GITHUB.REF }}'
#       uses: actions/checkout@v2


